public class QuickSortb {
	static int count;
	
	public int quick(int[] arr,int begin,int end){
		
		int pivot = arr[end-1];
		
		int i = begin;
		
		for(int j = begin;j!=end-1;++j){
			if(arr[j]<=pivot){
				swap(arr,i,j);
				++i;
			}
		}
		
		swap(arr,i,end-1);
		
		
		
		return i;
	
	}
	
	public void sort(int[] arr,int b,int e,int k){
		if(count == 0){
			swap(arr,k,e-1);
			count = count +1;
		}
		System.out.println(b + " " + e);
		if(Math.abs(b-e) > 2){
		
		if(b!=e ){
		int i  = quick(arr,b,e);
		sort(arr,b,i,k);
		i=i+1;
		sort(arr,i,e,k);
		}
		}else{
			insertionSort(arr,b,e);
		}
		
			
		
	}
	public static void insertionSort(int array[],int begin,int end) {
		System.out.println("Insertion " + begin + " " + end);
         
        for (int j = begin+1; j < end; j++) {
            int key = array[j];
            int i = j-1;
            while ( (i > -1) && ( array [i] > key ) ) {
                array [i+1] = array [i];
                i--;
            }
            array[i+1] = key;
        }
            
        }
	public void swap(int[] b,int i,int j){
		int temp = 0;
		temp = b[i];
		b[i] = b[j];
		b[j] = temp;
	}
	
	
	
	public static void main(String[] args){
		int[] a = {2,1,7,1,6,5,4,5,9,11,22,33,2,112,43};
		int e = a.length;
		int b = 0;
		QuickSortb obj = new QuickSortb();
		int smallk = 2;
		obj.sort(a, b, e, smallk);
		for ( int i = 0 ;i < a.length; i++){
			
			System.out.print(a[i] + ",");
		}
	}
}
